public class nus.extensions.tests.basic.Basic8 extends nus.extensions.tests.MainActivity
{

    public void <init>()
    {
        nus.extensions.tests.basic.Basic8 r0;

        r0 := @this: nus.extensions.tests.basic.Basic8;
        specialinvoke r0.<nus.extensions.tests.MainActivity: void <init>()>();
        return;
    }

    public void main(nus.extensions.tests.SourceEmulator, nus.extensions.tests.SinkEmulator)
    {
        nus.extensions.tests.basic.Basic8 r0;
        nus.extensions.tests.SourceEmulator r1;
        nus.extensions.tests.SinkEmulator r2;
        java.lang.String r3;
        java.util.BitSet r4, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: nus.extensions.tests.basic.Basic8;
        r1 := @parameter0: nus.extensions.tests.SourceEmulator;
        r2 := @parameter1: nus.extensions.tests.SinkEmulator;
        r3 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.lang.String getParameter(java.lang.String)>("name");
        $r5 = new java.util.BitSet;
        specialinvoke $r5.<java.util.BitSet: void <init>(int)>(10);
        r4 = $r5;
        $z0 = virtualinvoke r4.<java.util.BitSet: boolean get(int)>(0);
        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r4.<java.util.BitSet: boolean get(int)>(1);
        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r4.<java.util.BitSet: boolean get(int)>(2);
        if $z2 == 0 goto label1;

        $z3 = virtualinvoke r4.<java.util.BitSet: boolean get(int)>(3);
        if $z3 == 0 goto label0;

        virtualinvoke r4.<java.util.BitSet: boolean get(int)>(4);
        goto label1;

     label0:
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>(r3);

     label1:
        return;
    }

    public java.lang.String getDescription()
    {
        nus.extensions.tests.basic.Basic8 r0;

        r0 := @this: nus.extensions.tests.basic.Basic8;
        return "test of complex conditionals";
    }

    public int getVulnerabilityCount()
    {
        nus.extensions.tests.basic.Basic8 r0;

        r0 := @this: nus.extensions.tests.basic.Basic8;
        return 1;
    }
}
