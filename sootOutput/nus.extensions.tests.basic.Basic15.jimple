public class nus.extensions.tests.basic.Basic15 extends nus.extensions.tests.MainActivity
{
    private static final java.lang.String FIELD_NAME;

    public void <init>()
    {
        nus.extensions.tests.basic.Basic15 r0;

        r0 := @this: nus.extensions.tests.basic.Basic15;
        specialinvoke r0.<nus.extensions.tests.MainActivity: void <init>()>();
        return;
    }

    public void main(nus.extensions.tests.SourceEmulator, nus.extensions.tests.SinkEmulator)
    {
        nus.extensions.tests.basic.Basic15 r0;
        nus.extensions.tests.SourceEmulator r1;
        nus.extensions.tests.SinkEmulator r2;
        java.lang.String r3, r4, r5, r8, $r10;
        java.lang.StringBuffer r6, r7, $r12, $r13;
        java.lang.StringBuilder $r9, $r11;

        r0 := @this: nus.extensions.tests.basic.Basic15;
        r1 := @parameter0: nus.extensions.tests.SourceEmulator;
        r2 := @parameter1: nus.extensions.tests.SinkEmulator;
        r3 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.lang.String getParameter(java.lang.String)>("name");
        $r9 = new java.lang.StringBuilder;
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        r5 = (java.lang.String) r4;
        $r12 = new java.lang.StringBuffer;
        specialinvoke $r12.<java.lang.StringBuffer: void <init>(java.lang.String)>(r5);
        r6 = $r12;
        r7 = r6;
        $r13 = (java.lang.StringBuffer) r7;
        r8 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>(r8);
        return;
    }

    public java.lang.String getDescription()
    {
        nus.extensions.tests.basic.Basic15 r0;

        r0 := @this: nus.extensions.tests.basic.Basic15;
        return "test casts more exhaustively";
    }

    public int getVulnerabilityCount()
    {
        nus.extensions.tests.basic.Basic15 r0;

        r0 := @this: nus.extensions.tests.basic.Basic15;
        return 1;
    }
}
