public class nus.extensions.tests.basic.Basic18 extends nus.extensions.tests.MainActivity
{
    private static final java.lang.String FIELD_NAME;

    public void <init>()
    {
        nus.extensions.tests.basic.Basic18 r0;

        r0 := @this: nus.extensions.tests.basic.Basic18;
        specialinvoke r0.<nus.extensions.tests.MainActivity: void <init>()>();
        return;
    }

    public void main(nus.extensions.tests.SourceEmulator, nus.extensions.tests.SinkEmulator)
    {
        nus.extensions.tests.basic.Basic18 r0;
        nus.extensions.tests.SourceEmulator r1;
        nus.extensions.tests.SinkEmulator r2;
        java.lang.String r3;
        int i0, $i1;

        r0 := @this: nus.extensions.tests.basic.Basic18;
        r1 := @parameter0: nus.extensions.tests.SourceEmulator;
        r2 := @parameter1: nus.extensions.tests.SinkEmulator;
        r3 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.lang.String getParameter(java.lang.String)>("name");
        i0 = 0;
        goto label2;

     label0:
        if i0 <= 5 goto label1;

        $i1 = i0 % 17;
        if $i1 != 0 goto label1;

        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>(r3);

     label1:
        i0 = i0 + 1;

     label2:
        if i0 < 100 goto label0;

        return;
    }

    public java.lang.String getDescription()
    {
        nus.extensions.tests.basic.Basic18 r0;

        r0 := @this: nus.extensions.tests.basic.Basic18;
        return "protect agains simple loop unrolling";
    }

    public int getVulnerabilityCount()
    {
        nus.extensions.tests.basic.Basic18 r0;

        r0 := @this: nus.extensions.tests.basic.Basic18;
        return 1;
    }
}
