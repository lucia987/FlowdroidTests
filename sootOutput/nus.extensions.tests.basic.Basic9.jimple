public class nus.extensions.tests.basic.Basic9 extends nus.extensions.tests.MainActivity
{

    public void <init>()
    {
        nus.extensions.tests.basic.Basic9 r0;

        r0 := @this: nus.extensions.tests.basic.Basic9;
        specialinvoke r0.<nus.extensions.tests.MainActivity: void <init>()>();
        return;
    }

    public void main(nus.extensions.tests.SourceEmulator, nus.extensions.tests.SinkEmulator)
    {
        nus.extensions.tests.basic.Basic9 r0;
        nus.extensions.tests.SourceEmulator r1;
        nus.extensions.tests.SinkEmulator r2;
        java.lang.String r3, r5, r6, r7, r8, $r10;
        java.util.Random r4, $r9;
        boolean z0;

        r0 := @this: nus.extensions.tests.basic.Basic9;
        r1 := @parameter0: nus.extensions.tests.SourceEmulator;
        r2 := @parameter1: nus.extensions.tests.SinkEmulator;
        r3 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.lang.String getParameter(java.lang.String)>("name");
        $r9 = new java.util.Random;
        specialinvoke $r9.<java.util.Random: void <init>()>();
        r4 = $r9;
        z0 = virtualinvoke r4.<java.util.Random: boolean nextBoolean()>();
        r5 = r3;
        r6 = r5;
        if z0 == 0 goto label0;

        $r10 = r6;
        goto label1;

     label0:
        $r10 = r5;

     label1:
        r7 = $r10;
        r8 = r7;
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>(r8);
        return;
    }

    public java.lang.String getDescription()
    {
        nus.extensions.tests.basic.Basic9 r0;

        r0 := @this: nus.extensions.tests.basic.Basic9;
        return "chains of value assignments";
    }

    public int getVulnerabilityCount()
    {
        nus.extensions.tests.basic.Basic9 r0;

        r0 := @this: nus.extensions.tests.basic.Basic9;
        return 1;
    }
}
