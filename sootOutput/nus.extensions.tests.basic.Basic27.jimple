public class nus.extensions.tests.basic.Basic27 extends nus.extensions.tests.MainActivity
{
    private static final java.lang.String FIELD_NAME;

    public void <init>()
    {
        nus.extensions.tests.basic.Basic27 r0;

        r0 := @this: nus.extensions.tests.basic.Basic27;
        specialinvoke r0.<nus.extensions.tests.MainActivity: void <init>()>();
        return;
    }

    public void main(nus.extensions.tests.SourceEmulator, nus.extensions.tests.SinkEmulator)
    {
        nus.extensions.tests.basic.Basic27 r0;
        nus.extensions.tests.SourceEmulator r1;
        nus.extensions.tests.SinkEmulator r2;
        java.util.Enumeration r3;
        java.lang.String r4, r5, $r9;
        java.lang.Object $r6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r8;

        r0 := @this: nus.extensions.tests.basic.Basic27;
        r1 := @parameter0: nus.extensions.tests.SourceEmulator;
        r2 := @parameter1: nus.extensions.tests.SinkEmulator;
        r3 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.util.Enumeration getParameterNames()>();
        goto label1;

     label0:
        $r6 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (java.lang.String) $r6;
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("name");
        if $z0 == 0 goto label1;

        r5 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.lang.String getParameter(java.lang.String)>(r4);
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("value: ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>($r9);

     label1:
        $z1 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z1 != 0 goto label0;

        return;
    }

    public java.lang.String getDescription()
    {
        nus.extensions.tests.basic.Basic27 r0;

        r0 := @this: nus.extensions.tests.basic.Basic27;
        return "test getParameterMap";
    }

    public int getVulnerabilityCount()
    {
        nus.extensions.tests.basic.Basic27 r0;

        r0 := @this: nus.extensions.tests.basic.Basic27;
        return 1;
    }
}
