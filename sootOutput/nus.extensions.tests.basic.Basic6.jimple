public class nus.extensions.tests.basic.Basic6 extends nus.extensions.tests.MainActivity
{

    public void <init>()
    {
        nus.extensions.tests.basic.Basic6 r0;

        r0 := @this: nus.extensions.tests.basic.Basic6;
        specialinvoke r0.<nus.extensions.tests.MainActivity: void <init>()>();
        return;
    }

    public void main(nus.extensions.tests.SourceEmulator, nus.extensions.tests.SinkEmulator)
    {
        nus.extensions.tests.basic.Basic6 r0;
        nus.extensions.tests.SourceEmulator r1;
        nus.extensions.tests.SinkEmulator r2;
        java.lang.String r3, r4, r5, r6, r7, r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        int $i0, $i1;

        r0 := @this: nus.extensions.tests.basic.Basic6;
        r1 := @parameter0: nus.extensions.tests.SourceEmulator;
        r2 := @parameter1: nus.extensions.tests.SinkEmulator;
        r3 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.lang.String getParameter(java.lang.String)>("name");
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String toUpperCase()>();
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String concat(java.lang.String)>(";");
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String replace(char,char)>(59, 46);
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(":");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        $i0 = virtualinvoke r7.<java.lang.String: int length()>();
        $i1 = $i0 - 1;
        r8 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>($i1);
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>(r8);
        return;
    }

    public java.lang.String getDescription()
    {
        nus.extensions.tests.basic.Basic6 r0;

        r0 := @this: nus.extensions.tests.basic.Basic6;
        return "complex test of derived strings";
    }

    public int getVulnerabilityCount()
    {
        nus.extensions.tests.basic.Basic6 r0;

        r0 := @this: nus.extensions.tests.basic.Basic6;
        return 1;
    }
}
