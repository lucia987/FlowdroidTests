public class nus.extensions.tests.basic.Basic34 extends nus.extensions.tests.MainActivity
{

    public void <init>()
    {
        nus.extensions.tests.basic.Basic34 r0;

        r0 := @this: nus.extensions.tests.basic.Basic34;
        specialinvoke r0.<nus.extensions.tests.MainActivity: void <init>()>();
        return;
    }

    public void main(nus.extensions.tests.SourceEmulator, nus.extensions.tests.SinkEmulator)
    {
        nus.extensions.tests.basic.Basic34 r0;
        nus.extensions.tests.SourceEmulator r1;
        nus.extensions.tests.SinkEmulator r2;
        java.util.Enumeration r3;
        java.lang.String r4, r5;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: nus.extensions.tests.basic.Basic34;
        r1 := @parameter0: nus.extensions.tests.SourceEmulator;
        r2 := @parameter1: nus.extensions.tests.SinkEmulator;
        r3 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.util.Enumeration getHeaderNames()>();
        goto label1;

     label0:
        $r6 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (java.lang.String) $r6;
        r5 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.lang.String getHeader(java.lang.String)>(r4);
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>(r4);
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>(r5);

     label1:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 != 0 goto label0;

        return;
    }

    public java.lang.String getDescription()
    {
        nus.extensions.tests.basic.Basic34 r0;

        r0 := @this: nus.extensions.tests.basic.Basic34;
        return "values obtained from headers";
    }

    public int getVulnerabilityCount()
    {
        nus.extensions.tests.basic.Basic34 r0;

        r0 := @this: nus.extensions.tests.basic.Basic34;
        return 2;
    }
}
