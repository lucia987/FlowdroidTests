public class nus.extensions.tests.basic.Basic4 extends nus.extensions.tests.MainActivity
{

    public void <init>()
    {
        nus.extensions.tests.basic.Basic4 r0;

        r0 := @this: nus.extensions.tests.basic.Basic4;
        specialinvoke r0.<nus.extensions.tests.MainActivity: void <init>()>();
        return;
    }

    public void main(nus.extensions.tests.SourceEmulator, nus.extensions.tests.SinkEmulator)
    {
        nus.extensions.tests.basic.Basic4 r0;
        nus.extensions.tests.SourceEmulator r1;
        nus.extensions.tests.SinkEmulator r2;
        java.lang.String r3;
        java.util.Random r4, $r5;
        int i0;

        r0 := @this: nus.extensions.tests.basic.Basic4;
        r1 := @parameter0: nus.extensions.tests.SourceEmulator;
        r2 := @parameter1: nus.extensions.tests.SinkEmulator;
        r3 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.lang.String getParameter(java.lang.String)>("name");
        $r5 = new java.util.Random;
        specialinvoke $r5.<java.util.Random: void <init>()>();
        r4 = $r5;
        i0 = virtualinvoke r4.<java.util.Random: int nextInt()>();
        tableswitch(i0)
        {
            case 1: goto label0;
            case 2: goto label1;
            case 3: goto label2;
            default: goto label3;
        };

     label0:
        goto label3;

     label1:
        goto label3;

     label2:
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>(r3);

     label3:
        return;
    }

    public java.lang.String getDescription()
    {
        nus.extensions.tests.basic.Basic4 r0;

        r0 := @this: nus.extensions.tests.basic.Basic4;
        return "test path sensitivity just a bit";
    }

    public int getVulnerabilityCount()
    {
        nus.extensions.tests.basic.Basic4 r0;

        r0 := @this: nus.extensions.tests.basic.Basic4;
        return 1;
    }
}
