public class nus.extensions.tests.basic.Basic12 extends nus.extensions.tests.MainActivity
{

    public void <init>()
    {
        nus.extensions.tests.basic.Basic12 r0;

        r0 := @this: nus.extensions.tests.basic.Basic12;
        specialinvoke r0.<nus.extensions.tests.MainActivity: void <init>()>();
        return;
    }

    public void main(nus.extensions.tests.SourceEmulator, nus.extensions.tests.SinkEmulator)
    {
        nus.extensions.tests.basic.Basic12 r0;
        nus.extensions.tests.SourceEmulator r1;
        nus.extensions.tests.SinkEmulator r2;
        java.lang.String r3, $r6, $r8, $r10, $r12;
        boolean z0;
        java.util.Random $r4;
        java.lang.StringBuilder $r5, $r7, $r9, $r11;

        r0 := @this: nus.extensions.tests.basic.Basic12;
        r1 := @parameter0: nus.extensions.tests.SourceEmulator;
        r2 := @parameter1: nus.extensions.tests.SinkEmulator;
        r3 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.lang.String getParameter(java.lang.String)>("name");
        $r4 = new java.util.Random;
        specialinvoke $r4.<java.util.Random: void <init>()>();
        z0 = virtualinvoke $r4.<java.util.Random: boolean nextBoolean()>();
        if z0 == 0 goto label0;

        $r5 = new java.lang.StringBuilder;
        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>($r8);
        goto label1;

     label0:
        $r9 = new java.lang.StringBuilder;
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>($r12);

     label1:
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.String)>("\n");
        return;
    }

    public java.lang.String getDescription()
    {
        nus.extensions.tests.basic.Basic12 r0;

        r0 := @this: nus.extensions.tests.basic.Basic12;
        return "a simple conditional; both branches should be taken";
    }

    public int getVulnerabilityCount()
    {
        nus.extensions.tests.basic.Basic12 r0;

        r0 := @this: nus.extensions.tests.basic.Basic12;
        return 2;
    }
}
