public class nus.extensions.tests.basic.Basic26 extends nus.extensions.tests.MainActivity
{
    private static final java.lang.String FIELD_NAME;

    public void <init>()
    {
        nus.extensions.tests.basic.Basic26 r0;

        r0 := @this: nus.extensions.tests.basic.Basic26;
        specialinvoke r0.<nus.extensions.tests.MainActivity: void <init>()>();
        return;
    }

    public void main(nus.extensions.tests.SourceEmulator, nus.extensions.tests.SinkEmulator)
    {
        nus.extensions.tests.basic.Basic26 r0;
        nus.extensions.tests.SourceEmulator r1;
        nus.extensions.tests.SinkEmulator r2;
        java.util.Map r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.util.Set $r6;
        java.lang.Object $r7, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: nus.extensions.tests.basic.Basic26;
        r1 := @parameter0: nus.extensions.tests.SourceEmulator;
        r2 := @parameter1: nus.extensions.tests.SinkEmulator;
        r3 = virtualinvoke r1.<nus.extensions.tests.SourceEmulator: java.util.Map getParameterMap()>();
        $r6 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.Map$Entry) $r7;
        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>("name");
        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        virtualinvoke r2.<nus.extensions.tests.SinkEmulator: void println(java.lang.Object)>($r9);

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label0;

        return;
    }

    public java.lang.String getDescription()
    {
        nus.extensions.tests.basic.Basic26 r0;

        r0 := @this: nus.extensions.tests.basic.Basic26;
        return "test getParameterMap";
    }

    public int getVulnerabilityCount()
    {
        nus.extensions.tests.basic.Basic26 r0;

        r0 := @this: nus.extensions.tests.basic.Basic26;
        return 1;
    }
}
